<?php

namespace AppBundle\Repository;

/**
 * PartenaireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartenaireRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Liste des partenaires par ordre alphabetiques
     */
    public function getListeAsc()
    {
        return $this->createQueryBuilder('p')
                    ->orderBy('p.nom', 'ASC')
                    ->getQuery()->getResult()
            ;
    }

    /**
     * Liste des partenaires selon le service
     */
    public function findListePartenaireBy($service, $limit = null, $offset = null)
    {
        if ($limit){
            return $this->createQueryBuilder('p')
                ->innerJoin('p.services', 's')
                ->where('s.slug = :service')
                ->andWhere('p.statut = 1')
                ->orderBy('p.ordre', 'DESC')
                ->addOrderBy('p.nom', 'ASC')
                ->setFirstResult($offset)
                ->setMaxResults($limit)
                ->setParameter('service', $service)
                ->getQuery()->getResult();
            ;
        }else{
            return $this->createQueryBuilder('p')
                ->innerJoin('p.services', 's')
                ->where('s.slug = :service')
                ->andWhere('p.statut = 1')
                ->orderBy('p.ordre', 'DESC')
                ->addOrderBy('p.nom', 'ASC')
                ->setParameter('service', $service)
                ->getQuery()->getResult();
            ;
        }
    }

    /**
     * Liste des partenaires selon le domaine
     */
    public function findListePartenaireByDomaine($slug, $limit = null, $offset = null)
    {
        if ($limit){
            return $this->createQueryBuilder('p')
                        ->innerJoin('p.services', 's')
                        ->innerJoin('s.domaine', 'd')
                        ->where('d.slug = :slug')
                        ->andWhere('p.statut = 1')
                        ->orderBy('p.ordre', 'DESC')
                        ->addOrderBy('p.nom', 'ASC')
                        ->setFirstResult($offset)
                        ->setMaxResults($limit)
                        ->setParameter('slug', $slug)
                        ->getQuery()->getResult()
                        ;
        }else{
            return $this->createQueryBuilder('p')
                        ->innerJoin('p.services', 's')
                        ->innerJoin('s.domaine', 'd')
                        ->where('d.slug = :slug')
                        ->andWhere('p.statut = 1')
                        ->orderBy('p.ordre', 'DESC')
                        ->addOrderBy('p.nom', 'ASC')
                        ->setParameter('slug', $slug)
                        ->getQuery()->getResult()
                        ;
        }
    }
}
